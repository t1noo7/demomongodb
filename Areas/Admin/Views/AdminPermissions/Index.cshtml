@using PagedList.Core.Mvc
@model PagedList.Core.IPagedList<DemoMongoDB.Models.Permissions>
@{
    int CurrentPage = ViewBag.CurrentPage;
    ViewData["Title"] = "Danh sách Role";
    Layout = "~/Areas/Admin/Views/Shared/_AdminLayout.cshtml";
    var rolesDict = ViewBag.RolesDict as Dictionary<string, string> ?? new Dictionary<string, string>();

    // Group permissions by role ID
    var groupedPermissions = Model.GroupBy(p => p.RoleId)
    .Select(g => g.First())
    .ToList();
}

@if (User.Identity.IsAuthenticated)
{
<<<<<<< HEAD
    bool QuanLyQuyenTruyCap = User.Claims.Any(c => c.Type == "FunctionId66763c10b0fe10429a3f1517" && c.Value ==
    "66763c10b0fe10429a3f1517");
=======
    bool QuanLyQuyenTruyCap = User.Claims.Any(c => c.Type == "FunctionId66763c10b0fe10429a3f1517" && c.Value == "66763c10b0fe10429a3f1517");
>>>>>>> refs/remotes/origin/main
    bool CanCreate = User.Claims.Any(c => c.Type == "CanCreate66763c10b0fe10429a3f1517" && c.Value == "True");
    bool CanEdit = User.Claims.Any(c => c.Type == "CanEdit66763c10b0fe10429a3f1517" && c.Value == "True");
    bool CanRead = User.Claims.Any(c => c.Type == "CanRead66763c10b0fe10429a3f1517" && c.Value == "True");
    bool CanDelete = User.Claims.Any(c => c.Type == "CanDelete66763c10b0fe10429a3f1517" && c.Value == "True");

<<<<<<< HEAD
    <div class="page-header">
=======
<div class="page-header">
>>>>>>> refs/remotes/origin/main
    <div class="header-sub-title">
        <nav class="breadcrumb breadcrumb-dash">
            <a asp-area="Admin" asp-controller="Home" asp-action="Index" class="breadcrumb-item">
                <i class="anticon anticon-home m-r-5"></i>Home
            </a>
            <span class="breadcrumb-item active">Danh sách quyền : page @CurrentPage</span>
        </nav>
    </div>
</div>
<<<<<<< HEAD
    <div class="card">
    <div class="card-body">
        @if (TempData["ErrorMessage"] != null)
            {
                <div class="alert alert-danger">
                    @TempData["ErrorMessage"]
                </div>
            }
            <div class="row m-b-30">
                <div class="col-lg-8">
                    <div class="d-md-flex">
                        <div class="m-b-10 m-r-15">
                        </div>
                    </div>
                </div>
                @if (QuanLyQuyenTruyCap && CanCreate)
                {
                    <div class="col-lg-4 text-right">
                        <a class="btn btn-primary" asp-area="Admin" asp-controller="AdminPermissions" asp-action="Create">
                            <i class="anticon anticon-plus-circle m-r-5"></i>
                            <span>Add permission</span>
                        </a>
                    </div>
                }
            </div>
            <div class="table-responsive">
                <table class="table table-hover e-commerce-table">
                    <thead>
                        <tr>
                            <th>ID</th>
                            <th>Tên Role</th>
                            <th>#</th>
                        </tr>
                    </thead>
                    <tbody>
                        @if (groupedPermissions != null)
                        {
                            foreach (var item in groupedPermissions)
                            {
                                var roleName = item.RoleId != null && rolesDict.ContainsKey(item.RoleId) ? rolesDict[item.RoleId] :
                                "Unknown";
                                <tr>
                                    <td>@item._id</td>
                                    <td>@roleName</td>
                                    <td>
                                        @if (QuanLyQuyenTruyCap && CanEdit)
                                        {
                                            <a class="btn btn-secondary m-r-5" asp-area="Admin" asp-controller="AdminPermissions"
                                                asp-action="Edit" asp-route-id="@item._id">Edit</a>
                                        }
                                        @if (QuanLyQuyenTruyCap && CanDelete)
                                        {
                                            <a class="btn btn-success m-r-5" asp-area="Admin" asp-controller="AdminPermissions"
                                                asp-action="Delete" asp-route-id="@item._id">Delete</a>
                                        }
                                    </td>
                                </tr>
                            }
                        }
                    </tbody>
                </table>
                <div class="text-center">
                    <nav aria-label="Page navigation">
                        <ul class="pagination">
                            @for (int i = 1; i <= ViewBag.TotalPages; i++)
                            {
                                <li class="page-item @(ViewBag.CurrentPage == i ? "active" : "")">
                                    <a class="page-link" href="@Url.Action("Index", new { page = i })">@i</a>
                                </li>
                            }
                        </ul>
                    </nav>
                </div>
            </div>
        </div>
    </div>
}
=======
<div class="card">
    <div class="card-body">
        @if (TempData["ErrorMessage"] != null)
        {
            <div class="alert alert-danger">
                @TempData["ErrorMessage"]
            </div>
        }
        <div class="row m-b-30">
            <div class="col-lg-8">
                <div class="d-md-flex">
                    <div class="m-b-10 m-r-15">
                    </div>
                </div>
            </div>
            @if(QuanLyQuyenTruyCap && CanCreate)
            {
            <div class="col-lg-4 text-right">
                <a class="btn btn-primary" asp-area="Admin" asp-controller="AdminPermissions" asp-action="Create">
                    <i class="anticon anticon-plus-circle m-r-5"></i>
                    <span>Add permission</span>
                </a>
            </div>
            }
        </div>
        <div class="table-responsive">
            <table class="table table-hover e-commerce-table">
                <thead>
                    <tr>
                        <th>ID</th>
                        <th>Tên Role</th>
                        <th>#</th>
                    </tr>
                </thead>
                <tbody>
                    @if (groupedPermissions != null)
                    {
                        foreach (var item in groupedPermissions)
                        {
                            var roleName = item.RoleId != null && rolesDict.ContainsKey(item.RoleId) ? rolesDict[item.RoleId] :
                            "Unknown";
                            <tr>
                                <td>@item._id</td>
                                <td>@roleName</td>
                                <td>
                                    @if(QuanLyQuyenTruyCap && CanEdit)
                                    {
                                    <a class="btn btn-secondary m-r-5" asp-area="Admin" asp-controller="AdminPermissions"
                                        asp-action="Edit" asp-route-id="@item._id">Edit</a>
                                    }
                                    @if(QuanLyQuyenTruyCap && CanDelete)
                                    {
                                    <a class="btn btn-success m-r-5" asp-area="Admin" asp-controller="AdminPermissions"
                                        asp-action="Delete" asp-route-id="@item._id">Delete</a>
                                    }
                                </td>
                            </tr>
                        }
                    }
                </tbody>
            </table>
            <div class="text-center">
                <nav aria-label="Page navigation">
                    <ul class="pagination">
                        @for (int i = 1; i <= ViewBag.TotalPages; i++)
                        {
                            <li class="page-item @(ViewBag.CurrentPage == i ? "active" : "")">
                                <a class="page-link" href="@Url.Action("Index", new { page = i })">@i</a>
                            </li>
                        }
                    </ul>
                </nav>
            </div>
        </div>
    </div>
</div>
}
>>>>>>> refs/remotes/origin/main
